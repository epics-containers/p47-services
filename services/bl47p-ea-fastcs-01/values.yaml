# yaml-language-server: $schema=https://github.com/DiamondLightSource/FastCS/releases/download/0.9.2-alpha.6/fastcs-service.schema.json

# for local testing of schema changes switch to:
### yaml-language-server: $schema=../../../fastcs/schemas/fastcs-service.schema.json

fastcs:
  image:
    repository: ghcr.io/diamondlightsource/fastcs-example
    tag: 2025.8.1-beta.7
    pullPolicy: IfNotPresent

  iocConfig: /epics/ioc/config

  command:
    - fastcs-example
    - run
    - /epics/ioc/config/controller.yaml

  editable: true
  autostart: false

  extraContainers:
    - name: temp-controller-simulator
      image: ghcr.io/diamondlightsource/fastcs-example:latest
      command:
        - tickit
        - all
        - /epics/ioc/config/temp_controller.yaml

  volumes:
    - name: beamline-data
      hostPath:
        path: /exports/mybeamline/data/
  volumeMounts:
    - name: beamline-data
      mountPath: /exports/mybeamline/data/

  # TODO - the remaining values could be inherited from global values
  # BUT - the root key is different as c++ IOCs use `ioc-instance` instead of `fastcs`
  # TODO - how do we resolve that? best way is to migrate them to global values?
  # But not sure that is good as then all schemas bleed into each other.

  # account p47-detector for ALL containers in the pod
  securityContext:
    runAsUser: 37887
    runAsGroup: 37887

  # affinity and tolerations to get the right nodes on pollux
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: beamline
                operator: In
                values:
                  - bl47p

  tolerations:
    - key: beamline
      operator: Equal
      value: bl47p
      effect: NoSchedule
    - key: location
      operator: Equal
      value: bl47p
      effect: NoSchedule
    - key: nodetype
      operator: Equal
      value: training-rig
      effect: NoSchedule
