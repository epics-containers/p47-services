blueapi:
  hostNetwork: false
  resources:
    limits:
      cpu: 1000m
      memory: 500Mi
    requests:
      cpu: 500m
      memory: 100Mi
  nodeSelector:
    kubernetes.io/hostname: bl47p-ea-serv-01.diamond.ac.uk
  tolerations:
    - key: nodetype
      operator: Equal
      value: training-rig
      effect: NoSchedule
    - key: beamline
      operator: Equal
      value: bl47p
      effect: NoSchedule
  ingress:
    create: true
    host: p47-blueapi.diamond.ac.uk
  extraEnvVars:
    - name: BEAMLINE
      value: p47
    - name: RABBITMQ_PASSWORD
      valueFrom:
        secretKeyRef:
          name: rabbitmq-password
          key: rabbitmq-password
  tracing:
    otlp:
      enabled: true
      server:
        host: http://jaeger-all-in-one # replace with central instance
  worker:
    env:
      sources:
      - kind: dodal
        module: dodal.beamlines.training_rig
        # TODO: Make training rig plans repository
      - kind: planFunctions
        module: dodal.plans
      events:
        broadcast_status_events: False
    stomp:
      auth:
        username: p47
        password: ${RABBITMQ_PASSWORD}
      host: p47-rabbitmq
    oidc:
      well_known_url: "https://authn.diamond.ac.uk/realms/master/.well-known/openid-configuration"
      client_id: "blueapi-cli"
    scratch:
      root: /exports/mybeamline/p47/scratch/blueapi
  initContainer:
    scratch:
      root: /exports/mybeamline/p47/scratch/blueapi
      repositories:
        - name: dodal
          remote_url: https://github.com/DiamondLightSource/dodal.git
  scratchHostPath: /exports/mybeamline/p47/scratch/blueapi
